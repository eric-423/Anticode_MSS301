spring.application.name=booking-service
server.port=8081
spring.main.allow-bean-definition-overriding=true
spring.datasource.username=ansa
spring.datasource.password=>S2"p3/XAHYDCnxs
spring.datasource.url=jdbc:mysql://35.241.102.238:3306/booking-service?createDatabaseIfNotExist=true&useSSL=true&serverTimezone=UTC
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
#spring.sql.init.mode=always
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=booking-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
# Topic for booking events
app.kafka.booking-topic=booking-events
app.kafka.payment-topic=payment-events
cinema.service.url=http://localhost:8082