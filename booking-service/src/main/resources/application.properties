spring.application.name=booking-service
server.port=8081
spring.main.allow-bean-definition-overriding=true
spring.datasource.username=ansa
spring.datasource.password=>S2"p3/XAHYDCnxs
spring.datasource.url=jdbc:mysql://35.241.102.238:3306/booking_service?createDatabaseIfNotExist=true&useSSL=true&serverTimezone=UTC
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
#spring.sql.init.mode=always

spring.kafka.bootstrap-servers=35.185.182.18:9092
spring.kafka.consumer.group-id=booking-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
# Topic for booking events
app.kafka.booking-topic=booking-events
app.kafka.payment-topic=payment-events
app.kafka.payment-status-topic=payment-status-events


spring.main.allow-bean-definition-overriding=true



#PAYOS
PAYOS_CLIENT_ID=1be637df-b334-415e-a662-0c9f8be744b9
PAYOS_API_KEY=4f752ede-60bb-4ff5-b2ad-8ec9aedac317
PAYOS_CHECKSUM_KEY=a4e48ec875e840ecc6a2ce4f23c1344c76a83da177e8096a5aa39dfc26b907e0

# Payment Configuration
app.payment.base-url=http://34.87.75.73:8081
cinema.service.url=http://34.142.233.204:8082

spring.redis.host=localhost
spring.redis.port=6379
spring.redis.timeout=60000


spring.ai.vertex.ai.gemini.project-id=corded-dragon-463205-f6
spring.ai.vertex.ai.gemini.location=us-central1
spring.ai.vertex.ai.gemini.chat.options.model=gemini-2.0-flash-lite-001
spring.ai.vertex.ai.gemini.chat.options.temperature=0.5
